services:
  elasticsearch-setup:
    image: ${ELASTIC_VERSION}
    container_name: elasticsearch-setup
    volumes:
      - arlas-es-certs:/usr/share/elasticsearch/config/certs
      - arlas-es-config:/usr/share/elasticsearch/config
      - ${ELASTIC_BACKUP_DIR:-/tmp/elastic/backup}/elasticsearch/:/usr/share/elasticsearch/backup
    user: "0"
    networks:
      - arlas-net
    command: >
      bash -c '
        if [ x${ELASTIC_PASSWORD} == x ]; then
          echo "Set the ELASTIC_PASSWORD environment variable in the .env file";
          exit 1;
        fi;
        if [ ! -f config/certs/ca.zip ]; then
          echo "Creating CA";
          bin/elasticsearch-certutil ca --silent --pem -out config/certs/ca.zip;
          unzip config/certs/ca.zip -d config/certs;
        fi;
        if [ ! -f config/certs/certs.zip ]; then
          echo "Creating certs";
          echo -ne \
          "instances:\n"\
          "  - name: elasticsearch\n"\
          "    dns:\n"\
          "      - elasticsearch\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: elasticsearch-logs\n"\
          "    dns:\n"\
          "      - elasticsearch-logs\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: kibana\n"\
          "    dns:\n"\
          "      - kibana\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          "  - name: kibana-logs\n"\
          "    dns:\n"\
          "      - kibana-logs\n"\
          "      - localhost\n"\
          "    ip:\n"\
          "      - 127.0.0.1\n"\
          > config/certs/instances.yml;
          bin/elasticsearch-certutil cert --silent --pem -out config/certs/certs.zip --in config/certs/instances.yml --ca-cert config/certs/ca/ca.crt --ca-key config/certs/ca/ca.key;
          unzip config/certs/certs.zip -d config/certs;
        fi;
        echo "Adding APM secret token to keystore";
        su elasticsearch -c "echo $APM_SECRET_TOKEN | bin/elasticsearch-keystore add -f --stdin tracing.apm.secret_token"
        echo "Setting file permissions"
        chown 1000:1000 /usr/share/elasticsearch/backup
        chown -R root:root config/certs;
        find . -type d -exec chmod 755 \{\} \;;
        find . -type f -exec chmod 644 \{\} \;;
        echo "Waiting for Elasticsearch availability";
        until curl -s --cacert config/certs/ca/ca.crt https://elasticsearch:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Waiting for Elasticsearch-logs availability";
        until curl -s --cacert config/certs/ca/ca.crt https://elasticsearch-logs:9200 | grep -q "missing authentication credentials"; do sleep 30; done;
        echo "Setting kibana_system password";
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" \
          -H "Content-Type: application/json" https://elasticsearch:9200/_security/user/kibana_system/_password \
          -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        until curl -s -X POST --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" \
          -H "Content-Type: application/json" https://elasticsearch-logs:9200/_security/user/kibana_system/_password \
          -d "{\"password\":\"${KIBANA_PASSWORD}\"}" | grep -q "^{}"; do sleep 10; done;
        echo "Registering snapshot repository";
        curl -s -X PUT --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" \
          -H "Content-Type: application/json" https://elasticsearch:9200/_snapshot/backup \
          -d "{\"type\":\"fs\",\"settings\":{\"location\":\"/usr/share/elasticsearch/backup\"}}"
        echo ""
        echo "Create backup SLM policy";
        curl -s -X PUT --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" \
          -H "Content-Type: application/json" https://elasticsearch:9200/_slm/policy/nightly-snapshots \
          -d "{\"schedule\":\"0 30 1 * * ?\",\"name\":\"<nightly-snap-{now/d}>\",\"repository\":\"backup\",\"config\":{\"indices\":\"${AIRS_INDEX_COLLECTION_PREFIX}_*,.arlas,${APROC_INDEX_NAME}\",\"include_global_state\":true},\"retention\":{\"expire_after\":\"1m\",\"min_count\":5,\"max_count\":10}}"
        echo ""
        echo "Configure SLM retention task";
        curl -s -X PUT --cacert config/certs/ca/ca.crt -u "elastic:${ELASTIC_PASSWORD}" \
          -H "Content-Type: application/json" https://elasticsearch:9200/_cluster/settings \
          -d "{\"persistent\":{\"slm.retention_schedule\":\"0 0 1 * * ?\"}}"
        echo ""
        echo "All done!";
      '
    healthcheck:
      test: "[ -f config/certs/elasticsearch/elasticsearch.crt ]"
      interval: 10s
      timeout: 10s
      retries: 10
